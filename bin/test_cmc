#!/usr/bin/env bash
set -o errexit
set -o errtrace
set -o nounset

# shellcheck disable=SC2154
trap '_es=${?};
    printf "${0}: line ${LINENO}: \"${BASH_COMMAND}\"";
    printf " exited with a status of ${_es}\n";
    exit ${_es}' ERR

# https://en.wikipedia.org/wiki/ANSI_escape_code
E0="$(printf "\e[0m")"          # reset
E30="$(printf "\033[30m")"      # black foreground
E107="$(printf "\033[107m")"    # bright white background

CMC=$(command -v cmc)

print_header() {
    # Print 80 character wide black on white heading
    printf "${E30}${E107} %-70s$(date '+%T') ${E0}\n" "${@}"
    echo -n "${E30}${E107}"
    for _ in {1..80}
    do
        echo -n '='
    done
    echo "${E0}"
}


TESTHOST=${1:-}

if [[ -z "${TESTHOST}" ]]
then
    echo 'ERROR: the TESTHOST argument is required' 1>&2
    exit 1
fi

print_header 'Show Debug information'
${CMC} -d
echo
echo


print_header 'Verify syntax'
shellcheck ${CMC}
echo 'no syntax issues identified'
echo
echo


HEAD="Verify \`-c ${TESTHOST}\` check HOST ControlMaster connection status"
print_header "${HEAD}"
echo "1. Establish a connection to ${TESTHOST}"
ssh -o ClearAllForwardings=yes -o ControlPersist=5m -o VisualHostKey=no \
    "${TESTHOST}" exit 0
echo
echo "2. Check ${TESTHOST} with active socket"
${CMC} -c "${TESTHOST}" \
    | sed -e's/^/   /'
echo
PID=$(${CMC} -c "${TESTHOST}" | awk '/pid:/ {print $2}')
echo "3. Send ALRM signal to PID ${PID} leave a stale socket"
kill -14 "${PID}"
echo
echo "4. Check ${TESTHOST} with stale socket"
${CMC} -c "${TESTHOST}" 2>&1 \
    | sed -e's/^/   /'
echo
echo


# shellcheck disable=SC2016
print_header 'Verify `-l` list all active ControlMaster connection sockets'
echo "1. Establish a connection to ${TESTHOST}"
ssh -o ClearAllForwardings=yes -o ControlPersist=5m -o VisualHostKey=no \
    "${TESTHOST}" exit 0
echo
echo '2. List all with active socket'
${CMC} -l \
    | sed -e's/^/   /'
echo
PID=$(${CMC} -c "${TESTHOST}" | awk '/pid:/ {print $2}')
echo "3. Send ALRM signal to PID ${PID} leave a stale socket"
kill -14 "${PID}"
echo
echo '4. List all with stale socket'
${CMC} -l 2>&1 \
    | sed -e's/^/   /'
echo
echo


print_header "Verify \`-x ${TESTHOST}\` exit ControlMaster session"
echo "1. Establish a connection to ${TESTHOST}"
ssh -o ClearAllForwardings=yes -o ControlPersist=5m -o VisualHostKey=no \
    "${TESTHOST}" exit 0
echo
echo "2. Exit ${TESTHOST} with active socket"
${CMC} -x "${TESTHOST}" \
    | sed -e's/^/   /'
echo
echo "3. Establish a connection to ${TESTHOST}"
ssh -o ClearAllForwardings=yes -o ControlPersist=5m -o VisualHostKey=no \
    "${TESTHOST}" exit 0
echo
PID=$(${CMC} -c "${TESTHOST}" | awk '/pid:/ {print $2}')
echo "4. Send ALRM signal to PID ${PID} leave a stale socket"
kill -14 "${PID}"
echo
echo "5. Exit ${TESTHOST} with stale socket"
${CMC} -x "${TESTHOST}" 2>&1 \
    | sed -e's/^/   /'
echo
echo


# shellcheck disable=SC2016
print_header 'Verify `-X` exit all ControlMaster connections with sockets'
echo "1. Establish a connection to ${TESTHOST}"
ssh -o ClearAllForwardings=yes -o ControlPersist=5m -o VisualHostKey=no \
    "${TESTHOST}" exit 0
echo
echo '2. Exit all with active socket'
${CMC} -X \
    | sed -e's/^/   /'
echo
echo "3. Establish a connection to ${TESTHOST}"
ssh -o ClearAllForwardings=yes -o ControlPersist=5m -o VisualHostKey=no \
    "${TESTHOST}" exit 0
echo
PID=$(${CMC} -c "${TESTHOST}" | awk '/pid:/ {print $2}')
echo "4. Send ALRM signal to PID ${PID} leave a stale socket"
kill -14 "${PID}"
echo
echo '5. Exit all with stale socket'
${CMC} -X 2>&1 \
    | sed -e's/^/   /'
echo
